<!doctype html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Arc Project</title>
    <link type="text/css" rel="stylesheet" href="/css/style.css">

    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/gsap.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/gsap/3.9.1/Draggable.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/leader-line/1.0.3/leader-line.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script src="https://kit.fontawesome.com/dddbf2af22.js" crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/js/bootstrap.bundle.min.js"
        integrity="sha384-A3rJD856KowSb7dwlZdYEkO39Gagi7vIsF0jrRAoQmDKKtQBHUuLZ9AsSv4jD4Xa"
        crossorigin="anonymous"></script>
    <script src="https://kit.fontawesome.com/dddbf2af22.js" crossorigin="anonymous"></script>
    <script src="https://code.jquery.com/jquery-3.2.1.slim.min.js"
        integrity="sha384-KJ3o2DKtIkvYIK3UENzmM7KCkRr/rE9/Qpg6aAZGJwFDMVNA/GpGFF93hXpG5KkN"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/popper.js@1.12.9/dist/umd/popper.min.js"
        integrity="sha384-ApNbgh9B+Y1QKtv3Rn7W3mgPxhU9K/ScQsAP7hUibX39j7fakFPskvXusvfa0b4Q"
        crossorigin="anonymous"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@4.0.0/dist/js/bootstrap.min.js"
        integrity="sha384-JZR6Spejh4U02d8jOt6vLEHfe/JQGiRRSQQxSfFWpi1MquVdAyjUar5+76PVCmYl"
        crossorigin="anonymous"></script>


    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet"
        integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">

    <link rel="icon" href="/images/favicon-32x32.png" type="image/x-icon">
</head>

<body>
    <main style="height: 100%; width: 100%;">
        <div class="container-grid">
            <nav class="floating-menu">
                <h3>Interações</h3>
                <a href="/css/">CSS</a>
                <a href="/html/">HTML</a>
                <a href="/coldfusion/">ColdFusion</a>
                <a href="/database/">Database</a>
            </nav>
            <div id="initial-state" data-node="true" >
                <div class="btn-group">
                    <button id="end" class="btn btn-sm btn-pill first-btn-pill" type="button" data-toggle="dropdown"
                        aria-haspopup="true" aria-expanded="false" style="pointer-events: none;">
                        Estado inicial
                    </button>
                    <button type="button" class="btn btn-sm dropdown-toggle dropdown-toggle-split first-btn-pill"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                        style="border-radius: 0px 25px 25px 0px;">
                        <i class="fa fa-plus-circle"></i>

                    </button>
                    <div class="dropdown-menu">
                        <!-- On click -->
                        <a class="dropdown-item" onmousedown="add_action(this)">Adicionar estado</a>

                    </div>
                </div>
            </div>
        </div>
        <!-- <button type="button" class="btn btn-outline-info button-pill">Info</button> -->
    </main>
</body>

<script>
    $(document).ready(function () {
        // const cards = document.querySelectorAll('.controll-pill');

        // cards.forEach((card) => {
        //     Draggable.create(card, {
        //         type: "x,y",
        //         bounds: window,
        //         // inertia: true,
        //         onDragEnd: function () {
        //             updateLine();
        //         },
        //         onDrag: function (card) {
        //             updateLine();
        //         }
        //     });

        // });

        // const line = new LeaderLine(
        //     document.getElementById('start'),
        //     document.getElementById('end'), {
        //     startPlug: 'behind',
        //     endPlug: 'behind',
        //     color: '#0F78A9',
        //     size: 2,
        //     dash: { animation: true },
        //     // if overflow is true, the line will be extended to the edge of the container
        //     // overflow: true,

        // }
        // );

        // function updateLine() {
        //     line.position();

        //     // // Scroll to element on x
        //     // document.querySelector('.container-grid').scrollLeft = document.querySelector('.container-grid').scrollWidth;

        //     // // Scroll to element on y
        //     // document.querySelector('.container-grid').scrollTop = document.querySelector('.container-grid').scrollHeight;
        // }


        // On user scroll 
        // document.querySelector('.container-grid').addEventListener('scroll', function () {
        //     line.position();
        // });

        // tranlsate initial-state to middle of the screen height
        const initial = document.getElementById('initial-state');
        initial.style.transform = `translateY(${window.innerHeight / 2.5}px)`;


    });

    const default_node = `
            <div id="initial-state">
                <div class="btn-group">
                    <button id="end" class="btn btn-sm btn-pill first-btn-pill" type="button" data-toggle="dropdown"
                        aria-haspopup="true" aria-expanded="false" style="pointer-events: none;">
                        Estado inicial
                    </button>
                    <button type="button" class="btn btn-sm dropdown-toggle dropdown-toggle-split first-btn-pill"
                        data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"
                        style="border-radius: 0px 25px 25px 0px;">
                        <i class="fa fa-plus-circle"></i>

                    </button>
                    <div class="dropdown-menu">
                        <!-- On click -->
                        <a class="dropdown-item" href="#" onmousedown="add_action()">Adicionar estado</a>

                    </div>
                </div>
            </div>
    `;

    function add_action(father_node) {
        // Traverse father_node till find the data-node
        let node = father_node;
        while (node.getAttribute('data-node') !== 'true' || node === null) {
            node = node.parentNode;
        }

        // Get id of the node
        const id = node.getAttribute('id');

        // Create new node 
        var new_node = default_node;
        // Change id of the new node
        new_node = new_node.replace('initial-state', `new-node-${id + 1}`);

        // Find container
        const container = document.querySelector('.container-grid');

        // Append new node to container
        container.innerHTML += new_node;

        // translate new node to close to the father node
        const new_node_element = document.getElementById(`new-node-${id + 1}`);

        // Get father node position
        const father_node_position = father_node.getBoundingClientRect();

        // Get new node position
        const new_node_position = new_node_element.getBoundingClientRect();

        // Translate new node to close to the father node
        new_node_element.style.transform = `translate(${father_node_position.x + 100}px, ${father_node_position.y + 100}px)`;

        // Add line to new node
        const line = new LeaderLine(
            document.getElementById(id).children[0],
            document.getElementById(`new-node-${id + 1}`).children[0], {
            startPlug: 'behind',
            endPlug: 'behind',
            color: '#0F78A9',
            size: 2,
            dash: { animation: true },
            // if overflow is true, the line will be extended to the edge of the container
            // overflow: true,

        }
        );
        // Add drag to new node
        Draggable.create(new_node_element, {
            type: "x,y",
            bounds: window,
            // inertia: true,
            onDragEnd: function () {
                updateLine(line);
            },
            onDrag: function (card) {
                updateLine(line);
            }
        });


        // Update line position
        updateLine(line);

        

    }

    function updateLine(line) {
        line.position();

        // // Scroll to element on x
        // document.querySelector('.container-grid').scrollLeft = document.querySelector('.container-grid').scrollWidth;

        // // Scroll to element on y
        // document.querySelector('.container-grid').scrollTop = document.querySelector('.container-grid').scrollHeight;
    }
</script>

<style>
    body {
        margin: 0;
        width: 100%;
        height: 100vh;
        overflow: hidden;
        background-color: #06354a;
    }

    .floating-menu {
        background: #ffff;
        border-radius: 20px 20px 20px 20px;
        padding: 20px;
        margin: 5px;
        right: 0;
        width: 30%;
        height: 98%;
        z-index: 100;
        position: fixed;
    }

    .first-btn-pill {
        background-color: rgb(125, 189, 30) !important;
    }

    .fa-plus-circle {
        color: white;
    }

    .dropdown-toggle::after {
        display: none;
    }


    .btn {
        background-color: #486b7a;
        color: #EEE5E9;
        font-weight: 900;
    }

    .container-grid {
        width: 70%;
        height: 100%;

        overflow-x: scroll;
        /* Add your background pattern here */
        /* background-image: radial-gradient(rgba(255, 255, 255, 0.171) 2px, transparent 0);
        background-size: 30px 30px;
        background-position: -5px -5px */
    }

    .card {
        width: 180px;
        height: 300px;
        border-radius: 5px;
        border: 1px solid gainsboro;
        overflow: hidden;
        background: white;
    }

    .card .header {
        background: transparent;
        text-align: center;
    }

    .card .main {
        width: 100%;
        height: calc(100% - 20px);
        display: flex;
        align-items: center;
        justify-content: center;
        font-family: sans-serif;
        font-size: 20px;
    }
</style>